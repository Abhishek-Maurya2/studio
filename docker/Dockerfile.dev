FROM ubuntu:bionic

# Set the timezone
RUN ln -fs /usr/share/zoneinfo/America/Los_Angeles /etc/localtime

# Studio source directory ######################################################
RUN mkdir /src
WORKDIR /src
################################################################################


# System packages ##############################################################
ENV DEBIAN_FRONTEND noninteractive
# Default Python file.open file encoding to UTF-8 instead of ASCII
ENV LANG C.UTF-8
RUN apt-get update --fix-missing && \
    apt-get -y install \
        curl fish man \
        python-minimal python3.6 python3-pip python3-dev \
        gcc libpq-dev ffmpeg imagemagick unzip \
        ghostscript python-tk make git gettext libjpeg-dev \
        wkhtmltopdf fonts-freefont-ttf xfonts-75dpi poppler-utils

# Ensure that python is using python3
# copying approach from official python images
ENV PATH /usr/local/bin:$PATH
RUN cd /usr/local/bin && \
  ln -s $(which python3) python && \
  ln -s $(which pip3) pip

# Download and install libpng12, a dependency of wkhtmltox
RUN curl -L -o libpng12.deb http://security.ubuntu.com/ubuntu/pool/main/libp/libpng/libpng12-0_1.2.54-1ubuntu1.1_amd64.deb && \
    dpkg -i libpng12.deb && \
    rm libpng12.deb

# Download and install wkhtmltox
RUN curl -L -o wkhtmltox.deb https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.5/wkhtmltox_0.12.5-1.xenial_amd64.deb && \
    dpkg -i wkhtmltox.deb && \
    rm wkhtmltox.deb

# Download then install node
RUN curl -sL https://deb.nodesource.com/setup_10.x | bash - &&\
    apt-get install -y nodejs
################################################################################


# Node packages ################################################################
RUN npm install -g yarn && npm cache clean --force
COPY ./package.json ./yarn.lock   /src/
RUN  yarn install --network-timeout 1000000 --pure-lockfile && yarn cache clean
################################################################################


# Python packages ##############################################################
COPY requirements.txt requirements-dev.txt   /src/
RUN pip install --no-cache-dir --upgrade pip

# install pinned deps from pip-tools into system
RUN pip install --ignore-installed -r requirements.txt
RUN pip install --ignore-installed -r requirements-dev.txt
################################################################################


# Final cleanup ################################################################
RUN apt-get -y autoremove
################################################################################

CMD ["yarn", "run", "devserver"]
